buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nationwide'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


ext {
    springBootAdminVersion = '2.1.0'
    springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-aop')
//    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
//    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('de.codecentric:spring-boot-admin-starter-server')
//    implementation('org.liquibase:liquibase-core')
//    implementation('org.springframework.cloud:spring-cloud-starter-config')
//    implementation('org.springframework.cloud:spring-cloud-starter-gateway')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-turbine-stream')
//    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
//    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')
    implementation('org.springframework.session:spring-session-core')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('com.h2database:h2')
    runtimeOnly('com.microsoft.sqlserver:mssql-jdbc')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
